name: Publish Frontend Website

on:
  push:
    branches: ["master"]
    paths:
      - ".github/workflows/frontend.yaml"
      - "frontend/**"

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ghcr.io/lemwaizz/corruption_buster_frontend
  IMAGE_NAME: ghcr.io/lewynation/corruption_buster_frontend

  NEXT_PUBLIC_FIREBASE_API_KEY: ${{secrets.NEXT_PUBLIC_FIREBASE_API_KEY}}
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID}}
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}}
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}}
  NEXT_PUBLIC_FIREBASE_APP_ID: ${{secrets.NEXT_PUBLIC_FIREBASE_APP_ID}}
  OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Decode google service account
        run: |
          echo "${{ secrets.FIREBASE_SA}}" > service_account.json.asc
          gpg -d --passphrase "${{secrets.FIREBASE_SA_PASSKEY}}" --batch service_account.json.asc > ./frontend/firebase/server/sa_config.json

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # password: ${{ secrets.GHCR_LOGIN_TOKEN }}
          password: ${{ secrets.GHCR_LOGIN_TOKEN_IMG_PUSH_REPO }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.IMAGE_NAME}}
          tags: |
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
